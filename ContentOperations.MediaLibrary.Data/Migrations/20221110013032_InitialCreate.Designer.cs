// <auto-generated />
using ContentOperations.MediaLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContentOperations.MediaLibrary.Data.Migrations
{
    [DbContext(typeof(MediaLibraryContext))]
    [Migration("20221110013032_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContentOperations.MediaLibrary.Domain.Entities.StorageFolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FolderPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolderTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StorageTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StorageTypeId");

                    b.ToTable("StorageFolders");
                });

            modelBuilder.Entity("ContentOperations.MediaLibrary.Domain.Entities.StorageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StorageTypes");
                });

            modelBuilder.Entity("ContentOperations.MediaLibrary.Domain.Entities.StorageFolder", b =>
                {
                    b.HasOne("ContentOperations.MediaLibrary.Domain.Entities.StorageType", "StorageType")
                        .WithMany("StorageFolders")
                        .HasForeignKey("StorageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StorageType");
                });

            modelBuilder.Entity("ContentOperations.MediaLibrary.Domain.Entities.StorageType", b =>
                {
                    b.Navigation("StorageFolders");
                });
#pragma warning restore 612, 618
        }
    }
}
